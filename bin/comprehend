#!/usr/bin/env python

import base64
import googleapiclient.discovery
import operator
import os
import subprocess
import tempfile


def record(name='recording'):
    with tempfile.TemporaryDirectory() as directory:
        one = os.path.join(directory, 'one.flac')
        two = os.path.join(directory, 'two.flac')
        subprocess.call(['rec', '-q', '-V0', one,
                         'rate', '44100',
                         'silence', '0', '1', '1.0', '1%'])
        subprocess.call(['sox', '-q', '-V0', one, two,
                         'remix', '1,2'])
        return open(two, 'rb').read()

def transcribe(data):
    body = {
        'config': {
            'encoding': 'FLAC',
            'sampleRate': 44100,
            'languageCode': 'sv-SE',
        },
        'audio': {
            'content': base64.b64encode(data).decode('UTF-8'),
        },
    }
    service = googleapiclient.discovery.build('speech', 'v1beta1')
    request = service.speech().syncrecognize(body=body)
    response = request.execute()
    alternatives = []
    for result in response.get('results', []):
        alternatives.extend(result['alternatives'])
    return alternatives

def main():
    print('Say a sentence!')
    while True:
        data = record()
        print('Transcribing...')
        alternatives = transcribe(data)
        if len(alternatives) == 0:
            print('Try again. Repeat the sentence!')
            continue
        break
    scores = [alternative['confidence'] for alternative in alternatives]
    index, score = max(enumerate(scores), key=operator.itemgetter(1))
    transcript = alternatives[index]['transcript']
    print('Your sentence: {} (score {:.2f})'.format(transcript, score))

if __name__ == '__main__':
    main()
